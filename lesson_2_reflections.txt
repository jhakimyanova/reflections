What happens when you initialize a repository? Why do you need to do it?

	It makes from ordinary directory a repository. The hidden folder .git is added to store bucnh of metadata to store the history of repository since it's created. I need to do it to track changes that happen to this repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	Staging area is bunch of files that will be included in next commit. It's intermediate area between working directory and the repository. From working directory it differs because files in working diretory can be untracked. From repository it differs because it doesn't contain history of this files.

How can you use the staging area to make sure you have one commit per logical change?

	I can add to staging area only that files that are part of one logical change. So git will commit not all changed files but only the files that I asked him to commit.	

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Situations when you want to keep main working version of your code intact and try experimental features. For example if then I'll find bug in main branch of my code(master) it will be easier for me to spread it to my experimental branches. Branches will also help me to checkout to different commits easier because they have clear human-readable names instead of long series of symbols that have id of each commit.